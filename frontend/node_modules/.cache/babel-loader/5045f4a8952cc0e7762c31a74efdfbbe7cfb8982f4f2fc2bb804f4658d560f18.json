{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern_stack_assign\\\\frontend\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  month\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await axios.get(`/api/chart-data?month=${month}`); // Replace with your API endpoint\n        const data = response.data;\n\n        // Check if data is available and format it for the chart\n        if (data && data.length) {\n          const labels = data.map(item => item.priceRange); // Assuming priceRange exists\n          const values = data.map(item => item.itemCount); // Assuming itemCount exists\n\n          setChartData({\n            labels,\n            datasets: [{\n              label: 'Items in Price Range',\n              data: values,\n              backgroundColor: 'rgba(75, 192, 192, 0.6)'\n            }]\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching chart data\", error);\n      }\n    };\n    fetchChartData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), chartData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the selected month.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"zyZ7QcY7XuwkGGYOd/39rI4V6vg=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","jsxDEV","_jsxDEV","BarChart","month","_s","chartData","setChartData","labels","datasets","fetchChartData","response","get","data","length","map","item","priceRange","values","itemCount","label","backgroundColor","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["D:/mern_stack_assign/frontend/src/components/BarChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst BarChart = ({ month }) => {\r\n  const [chartData, setChartData] = useState({ labels: [], datasets: [] });\r\n\r\n  useEffect(() => {\r\n    const fetchChartData = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/chart-data?month=${month}`); // Replace with your API endpoint\r\n        const data = response.data;\r\n\r\n        // Check if data is available and format it for the chart\r\n        if (data && data.length) {\r\n          const labels = data.map(item => item.priceRange); // Assuming priceRange exists\r\n          const values = data.map(item => item.itemCount); // Assuming itemCount exists\r\n\r\n          setChartData({\r\n            labels,\r\n            datasets: [\r\n              {\r\n                label: 'Items in Price Range',\r\n                data: values,\r\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n              },\r\n            ],\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data\", error);\r\n      }\r\n    };\r\n\r\n    fetchChartData();\r\n  }, [month]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Transactions Bar Chart</h2>\r\n      {chartData.labels.length > 0 ? (\r\n        <Bar\r\n          data={chartData}\r\n          options={{\r\n            responsive: true,\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      ) : (\r\n        <p>No data available for the selected month.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IAAEU,MAAM,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAExEZ,SAAS,CAAC,MAAM;IACd,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,yBAAyBR,KAAK,EAAE,CAAC,CAAC,CAAC;QACpE,MAAMS,IAAI,GAAGF,QAAQ,CAACE,IAAI;;QAE1B;QACA,IAAIA,IAAI,IAAIA,IAAI,CAACC,MAAM,EAAE;UACvB,MAAMN,MAAM,GAAGK,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;UAClD,MAAMC,MAAM,GAAGL,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC;;UAEjDZ,YAAY,CAAC;YACXC,MAAM;YACNC,QAAQ,EAAE,CACR;cACEW,KAAK,EAAE,sBAAsB;cAC7BP,IAAI,EAAEK,MAAM;cACZG,eAAe,EAAE;YACnB,CAAC;UAEL,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDZ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BtB,SAAS,CAACE,MAAM,CAACM,MAAM,GAAG,CAAC,gBAC1BZ,OAAA,CAACH,GAAG;MACFc,IAAI,EAAEP,SAAU;MAChBuB,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEF1B,OAAA;MAAAsB,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CArDIF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}